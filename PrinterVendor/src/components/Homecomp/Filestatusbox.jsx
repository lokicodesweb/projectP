import React, { useCallback, useState, useEffect } from "react";
export const FileStatusCard = ({
  fileName,
  filestatus,
  uploadInfo,
  onRemove,
}) => {
  const getStatusIcon = () => {
    switch (filestatus) {
      case "uploading":
        return (
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="file-icon"
            style={{ width: "24px", height: "24px" }}
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M7 1C4.79086 1 3 2.79086 3 5V19C3 21.2091 4.79086 23 7 23H17C19.2091 23 21 21.2091 21 19V9.08615C21 8.1504 20.6719 7.24427 20.0729 6.52541L16.6678 2.43926C15.9078 1.52729 14.782 1 13.5949 1H7ZM5 5C5 3.89543 5.89543 3 7 3H13V6C13 8.20914 14.7909 10 17 10H19V19C19 20.1046 18.1046 21 17 21H7C5.89543 21 5 20.1046 5 19V5ZM18.6794 8C18.6359 7.93274 18.5882 7.86786 18.5364 7.80578L15.1313 3.71963C15.0897 3.66966 15.0458 3.622 15 3.57674V6C15 7.10457 15.8954 8 17 8H18.6794Z"
              fill="black"
            />
          </svg>
        );
      case "success":
        return (
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="success-icon"
            style={{ width: "24px", height: "24px" }}
          >
            <rect
              x="0.5"
              y="0.5"
              width="23"
              height="23"
              rx="11.5"
              stroke="#419564"
            />
            <mask id="path-2-inside-1_1_51" fill="white">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M16.7879 7.12712C16.8441 7.17682 16.8913 7.23893 16.9269 7.3099C16.9624 7.38088 16.9856 7.45933 16.9951 7.54076C17.0046 7.62219 17.0002 7.705 16.9822 7.78446C16.9642 7.86392 16.933 7.93846 16.8902 8.00382L11.1685 16.7541C11.1221 16.825 11.0632 16.8835 10.9958 16.9256C10.9284 16.9678 10.854 16.9927 10.7776 16.9986C10.7013 17.0045 10.6247 16.9914 10.5531 16.96C10.4815 16.9286 10.4165 16.8797 10.3624 16.8166L7.14397 13.0665C7.04922 12.948 6.99763 12.7913 7.00008 12.6294C7.00254 12.4674 7.05883 12.313 7.15711 12.1984C7.25539 12.0839 7.38798 12.0183 7.52695 12.0155C7.66592 12.0126 7.80041 12.0727 7.9021 12.1831L10.6871 15.4274L16.037 7.2463C16.1231 7.11458 16.2505 7.02806 16.3913 7.00572C16.5321 6.98338 16.6747 7.02704 16.7879 7.12712Z"
              />
            </mask>
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M16.7879 7.12712C16.8441 7.17682 16.8913 7.23893 16.9269 7.3099C16.9624 7.38088 16.9856 7.45933 16.9951 7.54076C17.0046 7.62219 17.0002 7.705 16.9822 7.78446C16.9642 7.86392 16.933 7.93846 16.8902 8.00382L11.1685 16.7541C11.1221 16.825 11.0632 16.8835 10.9958 16.9256C10.9284 16.9678 10.854 16.9927 10.7776 16.9986C10.7013 17.0045 10.6247 16.9914 10.5531 16.96C10.4815 16.9286 10.4165 16.8797 10.3624 16.8166L7.14397 13.0665C7.04922 12.948 6.99763 12.7913 7.00008 12.6294C7.00254 12.4674 7.05883 12.313 7.15711 12.1984C7.25539 12.0839 7.38798 12.0183 7.52695 12.0155C7.66592 12.0126 7.80041 12.0727 7.9021 12.1831L10.6871 15.4274L16.037 7.2463C16.1231 7.11458 16.2505 7.02806 16.3913 7.00572C16.5321 6.98338 16.6747 7.02704 16.7879 7.12712Z"
              fill="#0AECD9"
            />
            <path
              d="M16.7879 7.12712L22.7509 0.385982L22.7495 0.384699L16.7879 7.12712ZM16.8902 8.00382L9.35845 3.07709L9.35764 3.07834L16.8902 8.00382ZM11.1685 16.7541L18.6979 21.6844L18.7011 21.6796L11.1685 16.7541ZM10.9958 16.9256L15.7692 24.5555L10.9958 16.9256ZM10.3624 16.8166L17.1964 10.9603L17.1921 10.9552L10.3624 16.8166ZM7.14397 13.0665L0.115147 18.6875L0.212655 18.8094L0.314332 18.9279L7.14397 13.0665ZM7.9021 12.1831L14.731 6.32085L14.6286 6.20155L14.5221 6.0859L7.9021 12.1831ZM10.6871 15.4274L3.85825 21.2897L11.6624 30.3806L18.2196 20.353L10.6871 15.4274ZM16.037 7.2463L23.5694 12.1719L23.5701 12.1709L16.037 7.2463ZM16.7879 7.12712L10.825 13.8683C9.97004 13.112 9.32889 12.237 8.87984 11.3404L16.9269 7.3099L24.9739 3.27936C24.4538 2.24088 23.7182 1.2416 22.7509 0.385982L16.7879 7.12712ZM16.9269 7.3099L8.87984 11.3404C8.43104 10.4444 8.16356 9.50784 8.05574 8.58363L16.9951 7.54076L25.9345 6.49788C25.8077 5.41082 25.4938 4.31736 24.9739 3.27936L16.9269 7.3099ZM16.9951 7.54076L8.05574 8.58363C7.94789 7.65921 7.99604 6.71686 8.20465 5.796L16.9822 7.78446L25.7598 9.77293C26.0044 8.69314 26.0613 7.58517 25.9345 6.49788L16.9951 7.54076ZM16.9822 7.78446L8.20465 5.796C8.4132 4.87539 8.78906 3.94755 9.35845 3.07709L16.8902 8.00382L24.422 12.9305C25.0769 11.9294 25.5153 10.8524 25.7598 9.77293L16.9822 7.78446ZM16.8902 8.00382L9.35764 3.07834L3.63591 11.8286L11.1685 16.7541L18.7011 21.6796L24.4228 12.9293L16.8902 8.00382ZM11.1685 16.7541L3.63904 11.8238C4.25783 10.8788 5.11549 9.98828 6.22238 9.29579L10.9958 16.9256L15.7692 24.5555C17.0109 23.7787 17.9863 22.7711 18.6979 21.6844L11.1685 16.7541ZM10.9958 16.9256L6.22238 9.29579C7.33699 8.59847 8.65408 8.13627 10.0819 8.02556L10.7776 16.9986L11.4734 25.9717C13.0539 25.8491 14.5197 25.3372 15.7692 24.5555L10.9958 16.9256ZM10.7776 16.9986L10.0819 8.02556C11.5122 7.91465 12.9134 8.16783 14.1666 8.71722L10.5531 16.96L6.93967 25.2027C8.33611 25.8149 9.89042 26.0944 11.4734 25.9717L10.7776 16.9986ZM10.5531 16.96L14.1666 8.71722C15.4112 9.26282 16.4264 10.0617 17.1964 10.9603L10.3624 16.8166L3.52844 22.6729C4.40662 23.6977 5.55186 24.5943 6.93967 25.2027L10.5531 16.96ZM10.3624 16.8166L17.1921 10.9552L13.9736 7.20508L7.14397 13.0665L0.314332 18.9279L3.5328 22.678L10.3624 16.8166ZM7.14397 13.0665L14.1728 7.44548C15.475 9.0739 16.0259 10.9897 15.9991 12.7656L7.00008 12.6294L-1.99889 12.4931C-2.03068 14.5929 -1.37662 16.8221 0.115147 18.6875L7.14397 13.0665ZM7.00008 12.6294L15.9991 12.7656C15.9722 14.5413 15.3626 16.4568 13.9867 18.0598L7.15711 12.1984L0.327476 6.33703C-1.2449 8.16914 -1.96709 10.3936 -1.99889 12.4931L7.00008 12.6294ZM7.15711 12.1984L13.9867 18.0598C12.5777 19.7016 10.3697 20.9589 7.71194 21.0136L7.52695 12.0155L7.34196 3.01737C4.40628 3.07772 1.93304 4.46624 0.327476 6.33703L7.15711 12.1984ZM7.52695 12.0155L7.71194 21.0136C5.04827 21.0683 2.77087 19.8967 1.28214 18.2803L7.9021 12.1831L14.5221 6.0859C12.8299 4.24872 10.2836 2.9569 7.34196 3.01737L7.52695 12.0155ZM7.9021 12.1831L1.0732 18.0454L3.85825 21.2897L10.6871 15.4274L17.516 9.56512L14.731 6.32085L7.9021 12.1831ZM10.6871 15.4274L18.2196 20.353L23.5694 12.1719L16.037 7.2463L8.5045 2.32064L3.15469 10.5017L10.6871 15.4274ZM16.037 7.2463L23.5701 12.1709C22.4272 13.9192 20.4464 15.4748 17.8018 15.8945L16.3913 7.00572L14.9808 -1.88306C12.0546 -1.41872 9.81894 0.309937 8.5038 2.32171L16.037 7.2463ZM16.3913 7.00572L17.8018 15.8945C15.111 16.3215 12.5885 15.4276 10.8264 13.8696L16.7879 7.12712L22.7495 0.384699C20.7609 -1.3735 17.9532 -2.35474 14.9808 -1.88306L16.3913 7.00572Z"
              fill="#419564"
              mask="url(#path-2-inside-1_1_51)"
            />
          </svg>
        );
      case "failed":
        return (
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="failed-icon"
            style={{ width: "24px", height: "24px" }}
          >
            <rect
              x="0.5"
              y="0.5"
              width="23"
              height="23"
              rx="11.5"
              stroke="#9C4040"
            />
            <path
              d="M8.27997 7.20129C8.1378 7.06881 7.94975 6.99669 7.75545 7.00012C7.56115 7.00355 7.37576 7.08226 7.23835 7.21967C7.10094 7.35708 7.02222 7.54247 7.0188 7.73677C7.01537 7.93107 7.08749 8.11912 7.21997 8.26129L10.94 11.9813L7.21997 15.7013C7.14628 15.77 7.08718 15.8528 7.04619 15.9448C7.0052 16.0368 6.98316 16.1361 6.98138 16.2368C6.9796 16.3375 6.99813 16.4375 7.03585 16.5309C7.07357 16.6243 7.12971 16.7091 7.20093 16.7803C7.27215 16.8515 7.35698 16.9077 7.45037 16.9454C7.54376 16.9831 7.64379 17.0017 7.74449 16.9999C7.8452 16.9981 7.94451 16.9761 8.03651 16.9351C8.12851 16.8941 8.21131 16.835 8.27997 16.7613L12 13.0413L15.72 16.7613C15.7886 16.835 15.8714 16.8941 15.9634 16.9351C16.0554 16.9761 16.1547 16.9981 16.2554 16.9999C16.3562 17.0017 16.4562 16.9831 16.5496 16.9454C16.643 16.9077 16.7278 16.8515 16.799 16.7803C16.8702 16.7091 16.9264 16.6243 16.9641 16.5309C17.0018 16.4375 17.0203 16.3375 17.0186 16.2368C17.0168 16.1361 16.9947 16.0368 16.9538 15.9448C16.9128 15.8528 16.8537 15.77 16.78 15.7013L13.06 11.9813L16.78 8.26129C16.9124 8.11912 16.9846 7.93107 16.9811 7.73677C16.9777 7.54247 16.899 7.35708 16.7616 7.21967C16.6242 7.08226 16.4388 7.00355 16.2445 7.00012C16.0502 6.99669 15.8621 7.06881 15.72 7.20129L12 10.9213L8.27997 7.20129Z"
              fill="#9C4040"
            />
          </svg>
        );
      default:
        return null;
    }
  };

  const getStatusText = () => {
    switch (filestatus) {
      case "uploading":
        return "Uploading";
      case "success":
        return "Recieved";
      case "failed":
        return "Failed";
      default:
        return "";
    }
  };

  const getStatusColor = () => {
    switch (filestatus) {
      case "uploading":
        return "text-[white]";
      case "success":
        return "text-[#419564]";
      case "failed":
        return "text-[#9C4040]";
      default:
        return "text-black";
    }
  };

  return (
    <article className="flex max-w-[450px] h-[3px]    w-full items-center   shadow-[0px_1px_1px_0px_rgba(0,0,0,0.25)] bg-[#286AD4] p-[15px] rounded-[5px] ">
      <div className="text-[white]  font-small  justify-between w-full  ">
        {fileName}
      </div>
      <div className="flex  items-center justify-between w-full">
        <div className="text-[white] text-base font-normal   ">
          {uploadInfo < 1048576
            ? `${Math.round(uploadInfo / 1024)} KB`
            : `${(uploadInfo / 1048576).toFixed(2)} MB`}
        </div>
        <div className="flex items-center  ">
          {getStatusIcon()}
          <div
            className={`text-[white] font-normal justify-between w-full   ${getStatusColor()}`}
          >
            {getStatusText()}
          </div>
          <button
            onClick={onRemove}
            className="ml-2 text-[red] hover:text-red-400 transition-colors text-sm"
            title="Remove file"
          >
            ✕
          </button>
        </div>
      </div>
    </article>
  );
};

export default FileStatusCard;
